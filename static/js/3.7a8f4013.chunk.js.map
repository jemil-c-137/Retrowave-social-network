{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Dialogs/DialogMessages/DialogMessages.module.css","components/Dialogs/DialogItems/index.jsx","components/Dialogs/DialogMessages/index.js","components/Dialogs/index.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogueItem","props","path","id","className","styles","dialog","active","avatar","src","ava","alt","to","name","Message","message_wrapper","message","text","maxLength20","maxLengthCreator","Dialogues","reduxForm","form","onSubmit","handleSubmit","action","Field","component","Textarea","validate","required","type","dialogElements","messagesPage","dialogsData","map","dialogMessages","messageData","dialoguesWrapper","dialogues","messages_wrapper","messages","sendMessage","textArea","placeholder","onChange","e","target","value","newMessageText","sendButton","onClick","compose","connect","state","isAuth","auth","dispatch","updateMessageTextActionCreator","addMessageActionCreator","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,UAAY,2BAA2B,iBAAmB,kCAAkC,SAAW,0BAA0B,YAAc,6BAA6B,SAAW,0BAA0B,WAAa,8B,oBCArSD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,4BAA4B,OAAS,8B,oBCArGD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,gBAAkB,wCAAwC,OAAS,iC,iHCgBhHC,EAZM,SAACC,GACpB,IAAIC,EAAO,cAAgBD,EAAME,GACjC,OACE,yBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QAC3C,yBAAKH,UAAWC,IAAOG,OAAQC,IAAKR,EAAMS,IAAKC,IAAI,KACnD,kBAAC,IAAD,CAASC,GAAIV,GACVD,EAAMY,Q,kBCKAC,EAbC,SAACb,GAGf,OACI,yBAAKG,UAAWC,IAAOU,iBACrB,yBAAKX,UAAWC,IAAOW,SACpBf,EAAMgB,MAET,yBAAKb,UAAWC,IAAOG,OAAQC,IAAI,+EAA+EE,IAAI,O,kCCF1HO,EAAcC,YAAiB,IA0DpBC,GA/CWC,YAAU,CAAEC,KAAM,WAAlBD,EATN,SAACpB,GACnB,OACE,0BAAMsB,SAAUtB,EAAMuB,aAAcC,OAAO,IACzC,kBAACC,EAAA,EAAD,CAAOb,KAAM,cAAec,UAAWC,IAAUC,SAAU,CAACC,IAAUZ,GAAca,KAAK,aACzF,4CAOY,SAAC9B,GAEjB,IAAI+B,EAAiB/B,EAAMgC,aAAaC,YAAYC,KAAK,SAAA7B,GAAM,OAAI,kBAAC,EAAD,CAAcO,KAAMP,EAAOO,KAAMV,GAAIG,EAAOH,GAAIO,IAAKJ,EAAOE,YAC3H4B,EAAiBnC,EAAMgC,aAAaI,YAAYF,KAAK,SAAAnB,GAAO,OAAI,kBAAC,EAAD,CAASC,KAAMD,EAAQA,aAmB3F,OACE,yBAAKZ,UAAWC,IAAOiC,kBACrB,yBAAKlC,UAAWC,IAAOkC,WACpBP,GAEH,yBAAK5B,UAAWC,IAAOmC,kBACrB,yBAAKpC,UAAWC,IAAOoC,UACpBL,GAEH,8BAGA,yBAAKhC,UAAWC,IAAOqC,aACrB,8BAAUtC,UAAWC,IAAOsC,SAAUC,YAAa,eAAgBC,SA1BrD,SAACC,GACrB,IAAI7B,EAAO6B,EAAEC,OAAOC,MACpB/C,EAAMgD,eAAehC,IAwB+E+B,MAAO/C,EAAMgC,aAAagB,gBAAxH,KACA,4BAAQ7C,UAAWC,IAAO6C,WAAYC,QA/B7B,WACflD,EAAMyC,gBA8BA,a,wBClCKU,sBAAQC,aAlBD,SAACC,GACrB,MAAO,CACLrB,aAAcqB,EAAMrB,aACpBsB,OAAQD,EAAME,KAAKD,WAIE,SAACE,GACxB,MAAO,CACLR,eAAgB,SAAChC,GACfwC,EAASC,YAA+BzC,KAE1CyB,YAAa,WACXe,EAASE,oBAKqDC,IAArDR,CAAyEhC","file":"static/js/3.7a8f4013.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialoguesWrapper\":\"Dialogs_dialoguesWrapper__2M5iZ\",\"dialogues\":\"Dialogs_dialogues__22X6i\",\"messages_wrapper\":\"Dialogs_messages_wrapper__GwixR\",\"messages\":\"Dialogs_messages__bEHch\",\"sendMessage\":\"Dialogs_sendMessage__1Sr4C\",\"textArea\":\"Dialogs_textArea__3mqeA\",\"sendButton\":\"Dialogs_sendButton__bzVRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItems_dialog__3Cvzs\",\"active\":\"DialogItems_active__3g2nT\",\"avatar\":\"DialogItems_avatar__Drf3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"DialogMessages_message__1iN0Q\",\"message_wrapper\":\"DialogMessages_message_wrapper__2-JOg\",\"avatar\":\"DialogMessages_avatar__1cMbW\"};","import React from \"react\";\r\nimport styles from \"./DialogItems.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogueItem = (props) => {\r\n  let path = \"/dialogues/\" + props.id;\r\n  return (\r\n    <div className={styles.dialog + ' ' + styles.active}>\r\n      <img className={styles.avatar} src={props.ava} alt=\"\"/>\r\n      <NavLink to={path}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogueItem","import styles from \"./DialogMessages.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n  return (\r\n      <div className={styles.message_wrapper}>\r\n        <div className={styles.message}>\r\n          {props.text}\r\n        </div>\r\n        <img className={styles.avatar} src=\"https://i.pinimg.com/originals/02/2b/bb/022bbb45b3257c3c494a1de93179bd8a.png\" alt=\"\"/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport styles from './Dialogs.module.css';\r\nimport DialogueItem from \"./DialogItems\";\r\nimport Message from \"./DialogMessages\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\n\r\nlet maxLength20 = maxLengthCreator(20)\r\n\r\nconst MessageForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit} action=\"\">\r\n      <Field name={'messageText'} component={Textarea} validate={[required, maxLength20]} type=\"textarea\"/>\r\n      <button>send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm =  reduxForm({ form: 'message'})(MessageForm)\r\n\r\nconst Dialogues = (props) => {\r\n\r\n  let dialogElements = props.messagesPage.dialogsData.map( dialog => <DialogueItem name={dialog.name} id={dialog.id} ava={dialog.avatar}/> )\r\n  let dialogMessages = props.messagesPage.messageData.map( message => <Message text={message.message}/>)\r\n\r\n  let addMessage = () => {\r\n    props.sendMessage()\r\n  }\r\n\r\n  let onMessageChange = (e) => {\r\n    let text = e.target.value;\r\n    props.newMessageText(text)\r\n\r\n  }\r\n\r\n  let manageSubmit = (formData) => {\r\n\r\n    props.newMessageText(formData.messageText)\r\n    props.sendMessage()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.dialoguesWrapper}>\r\n      <div className={styles.dialogues}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={styles.messages_wrapper}>\r\n        <div className={styles.messages}>\r\n          {dialogMessages}\r\n        </div>\r\n        <div>\r\n          {/*<MessageReduxForm onSubmit={manageSubmit}/>*/}\r\n        </div>\r\n        <div className={styles.sendMessage}>\r\n          <textarea className={styles.textArea} placeholder={'Your message'} onChange={onMessageChange} value={props.messagesPage.newMessageText}> </textarea>\r\n          <button className={styles.sendButton} onClick={addMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogues","import {addMessageActionCreator, updateMessageTextActionCreator} from \"../../Redux/messagesReducer\";\r\nimport Dialogues from \"./index\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/authRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newMessageText: (text) => {\r\n      dispatch(updateMessageTextActionCreator(text))\r\n    },\r\n    sendMessage: () => {\r\n      dispatch(addMessageActionCreator())\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect, )(Dialogues)\r\n\r\n"],"sourceRoot":""}