{"version":3,"sources":["components/Profile/User/User.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/User/UserStatus/UserStatus.js","components/Profile/User/index.jsx","components/Profile/MyPosts/Post/index.jsx","components/Profile/MyPosts/index.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/index.jsx","components/Profile/ProfileComponent.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","UserStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onBlur","newStatus","autoFocus","onChange","e","currentTarget","type","User","profile","updateStatus","className","classes","container","avatar","src","photos","large","alt","text","title","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","Post","message","count","maxLength10","maxLengthCreator","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","window","MyPosts","console","log","posts","map","post","formData","addPost","postText","MyPostsContainer","connect","state","profilePage","postsData","dispatch","onAreaChange","updateNewAreaTextActionCreator","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","setUserProfileThunk","getUserStatusThunk","updateUserStatusThunk","React","Component","compose","loggedUserId","auth","getAuthThunk","withRouter"],"mappings":"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","file":"static/js/4.09708bb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__fUyjJ\",\"avatar\":\"User_avatar__1kV3-\",\"text\":\"User_text__3dnY2\",\"title\":\"User_title__2bF3W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Post_avatar__3jc5c\",\"container\":\"Post_container__37U51\",\"message\":\"Post_message__j5CQU\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {setNewUserStatus} from \"../../../../Redux/profileReducer\";\r\n\r\n\r\nconst UserStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    status = props.status\r\n  }, [])\r\n\r\n  const getNewStatus = () => {\r\n    props.newStatus(status)\r\n    setEditMode(false)\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <div> { !editMode && <span onClick={() => setEditMode(true)}>{props.status || 'no status'}</span>}\r\n      </div>\r\n      <div> { editMode && <input onBlur={getNewStatus}\r\n                                 autoFocus={true}\r\n                                 value={status}\r\n                                 onChange={onStatusChange}\r\n                                 type=\"text\"/> }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default UserStatus","import React from \"react\";\r\nimport classes from './User.module.css'\r\nimport Preloader from \"../../common/Preloader\";\r\nimport UserStatus from \"./UserStatus/UserStatus\";\r\n\r\nconst User = ({profile, updateStatus, status}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n\r\n    <div className={classes.container}>\r\n      <div className={classes.avatar}>\r\n        <img src={profile.photos.large} alt=\"\"/>\r\n      </div>\r\n      <div>\r\n        <UserStatus newStatus={updateStatus} status={status}/>\r\n      </div>\r\n      <div>\r\n        <p className={`${classes.text} ${classes.title}`}>{profile.fullName}</p>\r\n        <p className={classes.text}>{profile.aboutMe}</p>\r\n        <p className={classes.text}>{profile.lookingForAJob ? profile.lookingForAJobDescription : ''}</p>\r\n        <p className={classes.text}>Education: MIT'20</p>\r\n        <p className={classes.text}>website: it-kamasutra.com</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n  return(\r\n    <div className={classes.container}>\r\n      <div className={classes.avatar}>\r\n        <img  src=\"https://upload.wikimedia.org/wikipedia/commons/f/f5/Pic-vk-allaboutme-ava-2.jpg\" alt=\"\"/>\r\n      </div>\r\n      <p className={classes.message}>\r\n        {props.value}\r\n      </p>\r\n      <p> likes {props.count}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostForm = (props) => {\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name={\"postText\"} placeholder={\"your post\"} type='textarea' validate={[required, maxLength10]}/>\r\n      <button>Send</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxPostForm = reduxForm( {form: 'post'})(PostForm)\r\n\r\nwindow.props = []\r\n\r\nfunction MyPosts(props) {\r\n  console.log('render')\r\n  window.props.push(props)\r\n  let posts = props.posts.map(post => <Post value={post.text} count={post.value}/>)\r\n\r\n  let managePost = (formData) => {\r\n    props.addPost(formData.postText)\r\n  }\r\n\r\n  let onAddPost = () => {\r\n    props.addPost()\r\n  }\r\n  let onAreaChange = (e) => {\r\n    let text = e.target.value\r\n    props.onAreaChange(text)\r\n  }\r\n  return (\r\n    <div> My posts\r\n      <ReduxPostForm onSubmit={managePost}/>\r\n      <div>\r\n        {posts}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts","import React from \"react\";\r\n\r\nimport {addPostActionCreator, updateNewAreaTextActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./index\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAreaChange: (text) => {\r\n      dispatch(updateNewAreaTextActionCreator(text))\r\n    },\r\n    addPost: (text) => {\r\n      dispatch(addPostActionCreator(text))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport User from \"./User\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n      <main >\r\n        <User updateStatus={props.updateStatus} status={props.status} profile={props.profile}/>\r\n        <MyPostsContainer/>\r\n      </main>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./index\";\r\n\r\nimport {setUserProfileThunk, getUserStatusThunk, updateUserStatusThunk} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nimport {compose} from \"redux\";\r\nimport {getAuthThunk} from \"../../Redux/authReducer\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n\r\n\r\n    let userId = this.props.match.params.userId;\r\n\r\n  if (!userId) {\r\n      userId = 9494\r\n    }\r\n\r\n\r\n\r\n    this.props.setUserProfileThunk(userId);\r\n    this.props.getUserStatusThunk(userId);\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Profile status={this.props.status} updateStatus={this.props.updateUserStatusThunk} profile={this.props.profile} {...this.props} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loggedUserId: state.auth.userId\r\n  }\r\n}\r\n\r\nexport  default  compose(\r\n  connect(mapStateToProps, {setUserProfileThunk,\r\n  getUserStatusThunk, updateUserStatusThunk, getAuthThunk}),\r\n  withRouter)(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}