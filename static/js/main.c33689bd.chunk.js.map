{"version":3,"sources":["components/hoc/authRedirect.js","Redux/messagesReducer.js","components/Footer/Footer.module.css","api/api.js","components/Navbar/Navbar.module.css","components/Users/Users.module.css","serviceWorker.js","components/Navbar/Sidebar/Friends/FriendItem/index.jsx","components/Navbar/Sidebar/Friends/index.jsx","components/Navbar/Sidebar/index.jsx","components/Navbar/index.jsx","components/Settings/index.jsx","components/Music/index.jsx","components/News/index.jsx","components/Footer/index.jsx","components/Users/Paginator.js","components/Users/UserProfile.js","components/Users/Users.js","utils/object-helpers.js","Redux/users-reducer.js","Redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/index.jsx","components/Header/HeaderContainer.js","components/Login/Login.js","Redux/appReducer.js","Redux/redux-store.js","components/hoc/withSuspense.js","App.js","index.js","Redux/authReducer.js","components/common/Preloader/index.js","components/common/FormsControls/FormControl.module.css","utils/validators/index.js","components/Navbar/Sidebar/Friends/Friends.module.css","components/common/FormsControls/index.js","components/Navbar/Sidebar/Friends/FriendItem/FriendItem.module.css","components/Header/Header.module.css","Redux/profileReducer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initialState","messageData","id","message","dialogsData","name","avatar","newMessageText","addMessageActionCreator","type","updateMessageTextActionCreator","text","newText","messagesReducer","action","body","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followAPI","userId","post","unfollowAPI","delete","profileAPI","setUser","getStatus","updateStatus","status","put","getAuth","authLogin","email","password","rememberMe","authLogout","authApi","me","logIn","logOut","Boolean","window","location","hostname","match","FriendItem","className","styles","src","ava","alt","Friends","friends","user","map","friend","wrapper","title","items","Sidebar","messagesPage","Navbar","classes","nav","item","activeClassName","active","Settings","Music","News","Footer","footer","Paginator","totalUsers","onChange","pagesCount","Math","ceil","pages","i","push","page","onClick","console","log","selectedPage","UserProfile","followingInProgress","followThunk","unFollowThunk","userWrapper","photos","small","followed","btn","disabled","some","org","Users","users","totalUsersCount","onPageChanged","key","updateUsersArray","itemId","objectPropName","newObj","isFetching","followUser","unFollow","setUsers","setCurrentPage","setTotalUsersCount","usersCount","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","filter","usersPage","getUsersSelector","getPageSize","createSelector","u","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","p","getUsersThunkCreator","Preloader","usersInProgress","mapDispatchToProps","totalCount","bind","Header","header","login_block","login","logoutUser","HeaderContainer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Textarea","validate","required","formSummaryError","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","authReducer","formReducer","app","store","createStore","compose","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialoguesContainer","lazy","ProfileContainer","App","initializeApp","path","render","UsersContainer","AppWithRouter","withRouter","getAuthPromise","getAuthThunk","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","setUserData","errorMessage","messages","length","stopSubmit","_error","value","maxlength","undefined","input","meta","hasError","touched","formControl","postsData","newPostText","profile","addPostActionCreator","updateNewAreaTextActionCreator","setUserProfile","setUserStatus","setNewUserStatus","setUserProfileThunk","getUserStatusThunk","updateUserStatusThunk","alert","newPost","postId"],"mappings":"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","file":"static/js/main.c33689bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(this.props.isAuth === false) return <Redirect to={'/Login'} />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n\r\n\r\nlet ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return RedirectComponent\r\n}","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_MESSAGE_TEXT = 'UPDATE-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n  messageData: [\r\n    {id: 1, message: \"Aw Jeez\"},\r\n    {id: 2, message: \"Wubba lubba dub dub\"},\r\n    {id: 3, message: \"Get schwifty\"}\r\n  ],\r\n  dialogsData: [\r\n    {id: 1, name: \"Rick\", avatar: \"https://img1.looper.com/img/gallery/rick-and-morty-season-4-release-date-episodes-and-trailer/intro-1562623611.jpg\"},\r\n    {id: 2, name: \"Morty\", avatar: \"https://i.pinimg.com/originals/02/2b/bb/022bbb45b3257c3c494a1de93179bd8a.png\"},\r\n    {id: 3, name: \"Summer\", avatar: \"https://vignette.wikia.nocookie.net/rickandmorty/images/a/ad/Summer_is_cool.jpeg/revision/latest/top-crop/width/360/height/360?cb=20160919183158\"},\r\n    {id: 4, name: \"Jerry\", avatar: \"https://vignette.wikia.nocookie.net/rickandmorty/images/f/f1/Jerry_Smith.png/revision/latest?cb=20160923151111\"},\r\n    {id: 5, name: \"Beth\", avatar: \"https://vignette.wikia.nocookie.net/rickandmorty/images/5/58/Beth_Smith.png/revision/latest?cb=20191122063320\"},\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE: {\r\n      let body = state.newMessageText\r\n      return {\r\n        ...state,\r\n        newMessageText: '',\r\n        messageData: [...state.messageData, {id: 6, message: body}]\r\n      }\r\n    }\r\n\r\n    case UPDATE_MESSAGE_TEXT: {\r\n      return {\r\n        ...state,\r\n        newMessageText: action.newText\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addMessageActionCreator = () => ( {type: ADD_MESSAGE} )\r\nexport const updateMessageTextActionCreator = (text) => ( {type: UPDATE_MESSAGE_TEXT, newText: text} )\r\n\r\nexport default messagesReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3x7qU\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create( {\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: {'api-key': \"dccd3be0-aca0-4fd8-964b-6e599dd34ba7\"},\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance.get(`users?page=${currentPage}&count${pageSize}`).then(response => response.data)\r\n  },\r\n  followAPI(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollowAPI(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  setUser(userId) {\r\n    return instance.get(`profile/${userId}`)\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`)\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status})\r\n  },\r\n\r\n  getAuth() {\r\n    return instance.get('auth/me')\r\n  },\r\n  authLogin(email, password, rememberMe = false) {\r\n\r\n    return instance.post('auth/login', {email, password, rememberMe})\r\n  },\r\n  authLogout() {\r\n    return instance.delete('auth/login')\r\n  }\r\n}\r\n\r\n\r\nexport const  authApi = {\r\n  me() {\r\n    return instance.get('auth/me')\r\n  },\r\n  logIn(email, password, rememberMe = false) {\r\n    return instance.post('auth/login', {email, password, rememberMe})\r\n  },\r\n  logOut() {\r\n    return instance.delete('auth/login')\r\n  }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__6_nL_\",\"item\":\"Navbar_item__o-fna\",\"active\":\"Navbar_active__2keAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__2UGpD\",\"org\":\"Users_org__IcsNS\",\"userWrapper\":\"Users_userWrapper__jOOH4\",\"status\":\"Users_status__1Ovmx\",\"location\":\"Users_location__1eeG7\",\"selectedPage\":\"Users_selectedPage__1d8vd\",\"btn\":\"Users_btn__1tpuZ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from './FriendItem.module.css'\r\n\r\nconst FriendItem = (props) => {\r\n  return(\r\n    <div>\r\n      <div className={styles.avatar}><img src={props.ava} alt=\"\"/></div>\r\n      <div className={styles.name}>{props.name}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FriendItem","import React from \"react\";\r\nimport FriendItem from \"./FriendItem\";\r\nimport styles from './Friends.module.css'\r\n\r\nconst Friends = (props) => {\r\n  let friends = props.user.map(friend => <FriendItem ava={friend.avatar} name={friend.name}/>)\r\n  return(\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.title}>Friends</div>\r\n      <div className={styles.items}>\r\n        {friends}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport Friends from \"./Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.messagesPage.dialogsData\r\n  }\r\n}\r\n\r\n\r\nconst Sidebar = connect(mapStateToProps)(Friends)\r\n\r\nexport default Sidebar","import React from \"react\";\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}><NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink></div>\r\n      <div className={classes.item}><NavLink to='/dialogues' activeClassName={classes.active}>Messages</NavLink></div>\r\n      <div className={classes.item}><NavLink to='/news' activeClassName={classes.active}>News</NavLink></div>\r\n      <div className={classes.item}><NavLink to='/music' activeClassName={classes.active}>Music</NavLink></div>\r\n      <div className={classes.item}><NavLink to='/settings'  activeClassName={classes.active}>Settings</NavLink></div>\r\n      <div className={classes.item}><NavLink to='/users'  activeClassName={classes.active}>Users</NavLink></div>\r\n      <Sidebar />\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n//       <Sidebar users={props.messagesPage.dialogsData}/>","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n  return(\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n  return(\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst News = () => {\r\n  return(\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Footer.module.css\"\r\n\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <footer className={classes.footer}>\r\n      Hello World!\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, {useState} from \"react\";\r\nimport styles from \"./Users.module.css\";\r\n\r\nconst Paginator = ({totalUsers, pageSize, currentPage, onChange}) => {\r\n  let pagesCount = Math.ceil((totalUsers / pageSize) / 100);\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {pages.map(page => {\r\n          return <span\r\n            onClick={() => {\r\n              console.log(currentPage)\r\n              onChange(page)\r\n            }}\r\n            className={currentPage === page && styles.selectedPage}>{page}</span>\r\n        }\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet UserProfile = ({followingInProgress, user, followThunk, unFollowThunk }) => {\r\n  return (\r\n        <div className={styles.userWrapper}>\r\n          <div>\r\n            <div>\r\n              <NavLink to={`/profile/${user.id}`}>\r\n                <img className={styles.avatar}\r\n                     src={user.photos.small || 'http://placekitten.com/200/300'} alt=\"\"/>\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {user.followed\r\n\r\n                ? <button className={styles.btn} disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                            unFollowThunk(user.id)\r\n\r\n                          }}>unfollow</button>\r\n\r\n                : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                  followThunk(user.id)\r\n                }}>follow</button>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n\r\n            <div>\r\n              <p className={styles.org}>{user.name}</p>\r\n              <p className={styles.status}>{user.status}</p>\r\n            </div>\r\n            <div className={styles.location}>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile","import React from 'react';\r\n\r\nimport Paginator from './Paginator';\r\n\r\nimport UserProfile from './UserProfile';\r\n\r\nlet Users = ({ users, totalUsersCount, pageSize, currentPage, onPageChanged, ...props }) => {\r\n  return (\r\n    <div>\r\n      <Paginator totalUsers={totalUsersCount} pageSize={pageSize} currentPage={currentPage} onChange={onPageChanged} />\r\n\r\n      {users.map((user) => (\r\n        <UserProfile\r\n          user={user}\r\n          key={user.id}\r\n          followingInProgress={props.followingInProgress}\r\n          unFollowThunk={props.unFollowThunk}\r\n          followThunk={props.followThunk}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const updateUsersArray = (items, itemId, objectPropName, newObj) => {\r\n return  items.map(i => {\r\n  if (i[objectPropName] === itemId) {\r\n    return {...i, ...newObj} // changing item state\r\n  }\r\n  return i\r\n})\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateUsersArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FOLLOWING\";\r\nconst HANDLE_FOLLOW = 'HANDLE_FOLLOW';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 20,\r\n  currentPage: 3,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n  // actions for dispatch\r\n  switch (action.type) {\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateUsersArray(state.users, action.userId, 'id', {followed: true})\r\n        /*users: state.users.map(user => { // copy only user need to change\r\n          if (user.id === action.userId) {\r\n            return {...user, followed: true} // changing user state\r\n          }\r\n          return user\r\n        })*/\r\n      }\r\n    }\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n       users: updateUsersArray(state.users, action.userId, 'id', {followed: false})\r\n        /*users: state.users.map(user => {\r\n          if (user.id === action.userId) {\r\n            return {...user, followed: false}\r\n          }\r\n          return user\r\n        })*/\r\n      }\r\n    }\r\n    case SET_USERS: {\r\n      return {...state, users: action.users}\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {...state, currentPage: action.page}\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {...state, totalUsersCount: action.usersCount}\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n\r\n    case TOGGLE_IS_FOLLOWING: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n      }\r\n\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n// Action creators\r\nexport const handleFollowingAC = (userId, handler) => ({type: HANDLE_FOLLOW, userId, handler})\r\nexport const followUser = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page})\r\nexport const setTotalUsersCount = (usersCount) => ({type: SET_TOTAL_USERS_COUNT, usersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING, isFetching, userId})\r\n// Thunks\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true))\r\n  console.log(currentPage)\r\n  const response = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n  dispatch(toggleIsFetching(false))\r\n  dispatch(setUsers(response.items))\r\n  dispatch(setTotalUsersCount(response.totalCount))\r\n  dispatch(setCurrentPage(currentPage))\r\n}\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId))\r\n  let response = await apiMethod(userId)\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n\r\nexport const followThunk = (userId) => async (dispatch) => {\r\n  followUnfollowFlow(dispatch, userId, usersAPI.followAPI.bind(usersAPI), followUser)\r\n}\r\n\r\nexport const unFollowThunk = userId => async dispatch => (followUnfollowFlow(dispatch, userId, usersAPI.unfollowAPI.bind(usersAPI), unFollow))\r\n\r\n\r\n\r\n\r\nexport default usersReducer","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return getUsers(state).filter(user => true)\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n\r\n  return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {\r\n  followThunk,\r\n  followUser, getUsersThunkCreator,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  setUsers, toggleFollowingProgress,\r\n  toggleIsFetching,\r\n  unFollow, unFollowThunk,\r\n} from \"../../Redux/users-reducer\";\r\nimport {withAuthRedirect} from \"../hoc/authRedirect\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers, getUsersSelector\r\n} from \"../../Redux/usersSelectors\";\r\n\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props\r\n    this.props.getUsersThunkCreator(currentPage, pageSize)\r\n  }\r\n\r\n  onPageChanged = (p) => {\r\n  this.props.getUsersThunkCreator(p, this.props.pageSize)\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <>\r\n        {this.props.isFetching ?\r\n          <Preloader/> : null}\r\n        <Users totalUsersCount={this.props.totalUsersCount}\r\n               pageSize={this.props.pageSize}\r\n               currentPage={this.props.currentPage}\r\n               onPageChanged={this.onPageChanged}\r\n               users={this.props.users}\r\n               usersInProgress={this.props.usersInProgress}\r\n                followThunk={this.props.followThunk}\r\n               unFollowThunk={this.props.unFollowThunk}\r\n               followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    users: getUsersSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = {\r\n  followUser, unFollow, setUsers,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  toggleIsFetching,\r\n  toggleFollowingProgress,\r\n  getUsersThunkCreator,\r\n followThunk,\r\n unFollowThunk,\r\n\r\n}\r\nexport default withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent))\r\n\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/a/ac/Oikya_Front_Logo.png\" alt=\"\"/>\r\n      <div className={classes.login_block}>\r\n        {props.isAuth\r\n          ? <div>{props.login}  <button onClick={props.logoutUser}>logout</button></div>\r\n          :<NavLink to={'/login'}>Login</NavLink>}\r\n\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./index\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../Redux/authReducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n // this.props.getAuthThunk()\r\n   /* getAuth().then(response => {\r\n        if(response.data.resultCode === 0) {\r\n          let {userId, login, email} = response.data.data;\r\n          this.props.setUserData(response.data.data.id, response.data.data.email, response.data.data.login)\r\n        }\r\n       //\r\n\r\n      })*/\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Header {...this.props}/>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutUser})(HeaderContainer)\r\n\r\n","import React from \"react\";\r\nimport styles from '../common/FormsControls/FormControl.module.css'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\n\r\nimport {Textarea} from \"../common/FormsControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({handleSubmit,  error}) => {\r\n\r\n  return (\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <div><Field name={'login'} placeholder={'login'} type={'input'} component={Textarea} validate={[required, maxLength30]}/></div>\r\n      <div><Field name={'password'} placeholder={'password'} type={'input'} component={Textarea} validate={[required, maxLength30]}/></div>\r\n      <div><Field name={'rememberMe'} component={'input'} type={\"checkbox\"}/>Remember me</div>\r\n      <div>\r\n\r\n        <button>\r\n          sign in\r\n        </button>\r\n        {error && <div className={styles.formSummaryError}>\r\n          {error /* error text from stopSubmit*/}\r\n        </div>}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = ({login, isAuth}) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    login(formData.login, formData.password)\r\n  }\r\n\r\n  if(isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return <div>\r\n    <h1>Sign in</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n    <div >\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport const mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login}) (Login)","import { getAuthThunk } from \"./authReducer\";\r\n\r\nconst GET_INITIALIZED = \"GET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  // actions for dispatch\r\n  switch (action.type) {\r\n    case GET_INITIALIZED: {\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action creators\r\nexport const getInitializedAC = () => ({ type: GET_INITIALIZED });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let getAuthPromise = dispatch(getAuthThunk());\r\n  Promise.all([getAuthPromise]).then(dispatch(getInitializedAC()));\r\n};\r\n\r\n/*\r\n\r\n\r\n\r\nexport const getAuthThunk = () => {\r\n  debugger;\r\n\r\n  return (dispatch) => {\r\n\r\n   authApi.me().then(response => {\r\n\r\n      if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setUserData(id, email, login, true))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const login = (login, password, rememberMe) => (dispatch) => {\r\n   authApi.logIn(login, password, rememberMe).then(response => {\r\n     debugger;\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getAuthThunk())\r\n      } else {\r\n        // error handling\r\n        debugger;\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error' ; //getting server error message\r\n        dispatch(stopSubmit('login', {_error: errorMessage}))\r\n      }\r\n    })\r\n\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    authApi.logOut().then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n      }\r\n    })\r\n}\r\n*/\r\n\r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: messagesReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers,\r\n  compose(\r\n    applyMiddleware(thunkMiddleware)\r\n  ));\r\nexport default store","import React, { Suspense } from 'react';\r\nimport Preloader from './../common/Preloader/index';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={<Preloader/>}>\r\n      <Component {...props} />\r\n    </Suspense>;\r\n  };\r\n};\r\n","import React, { Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Settings from './components/Settings';\r\nimport Music from './components/Music';\r\nimport News from './components/News';\r\nimport Footer from './components/Footer';\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './Redux/appReducer';\r\nimport Preloader from './components/common/Preloader';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport store from './Redux/redux-store';\r\nimport { withSuspense } from './components/hoc/withSuspense';\r\n\r\n\r\n//lazy looading\r\nconst DialoguesContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileComponent'));\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"app-wrapper\">\r\n          <HeaderContainer />\r\n          <Navbar />\r\n          <div className=\"app-wrapper-content\">\r\n            <Route\r\n              path=\"/dialogues\"\r\n              render={withSuspense(DialoguesContainer)}\r\n            />\r\n            <Route\r\n              path=\"/profile/:userId?\"\r\n              render={withSuspense(ProfileContainer)}\r\n            />\r\n            <Route path=\"/news\" render={() => <News />} />\r\n            <Route path=\"/music\" render={() => <Music />} />\r\n            <Route path={'/settings'} render={() => <Settings />} />\r\n            <Route path={'/users'} render={() => <UsersContainer />} />\r\n            <Route path={'/login'} component={() => <Login />} />\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n  };\r\n};\r\n\r\nconst AppWithRouter = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst MainApp = (props) => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Provider store={store}>\r\n        <AppWithRouter />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport MainApp from \"./App\";\r\n\r\n\r\n//let rerenderEntireTree = () => {\r\nReactDOM.render(\r\n  <MainApp/>,\r\ndocument.getElementById('root')\r\n)\r\n//}\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n/*\r\n\r\nlet rerenderEntireTree = (state) => {\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App state={state} store={store} dispatch={store.dispatch.bind(store)} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\nrerenderEntireTree(store.getState())\r\n\r\nstore.subscribe(() => {\r\n  let state = store.getState()\r\n  rerenderEntireTree(state)\r\n})*/\r\n","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: action.data.isAuth\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  data: {userId, email, login, isAuth}\r\n})\r\nexport const getAuthThunk = () => async (dispatch) => {\r\n  const response = (await authApi.me()).data\r\n  if (response.resultCode === 0) {\r\n    let {id, login, email} = response.data;\r\n    dispatch(setUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (login, password, rememberMe) => async (dispatch) => {\r\n  const response = (await authApi.logIn(login, password, rememberMe)).data\r\n  if (response.resultCode === 0) {\r\n    dispatch(getAuthThunk())\r\n  } else {\r\n    let errorMessage = response.messages.length > 0 ? response.messages[0] : 'Some error'; //getting server error message\r\n    dispatch(stopSubmit('login', {_error: errorMessage}))\r\n  }\r\n\r\n}\r\nexport const logoutUser = () => async (dispatch) => {\r\n  let response =( await authApi.logOut()).data\r\n  if (response.resultCode === 0) {\r\n    dispatch(setUserData(null, null, null, false))\r\n  }\r\n}\r\nexport default authReducer\r\n","import React from \"react\";\r\n\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src=\"https://codemyui.com/wp-content/uploads/2020/07/Scan-Text-Loading-Label.gif\" alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormControl_form-control__3em32\",\"formControl\":\"FormControl_formControl__1Nx9E\",\"error\":\"FormControl_error__Ruz_4\",\"formSummaryError\":\"FormControl_formSummaryError__3S-4_\"};","\r\n\r\nexport const required = (value) => {\r\n  if(value) return undefined\r\n  return \"Fill the field\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxlength) => (value) =>   value.length > maxlength ? `must be less${maxlength}` : undefined;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friends_wrapper__1poNW\",\"title\":\"Friends_title__3J4LQ\",\"items\":\"Friends_items__3gaFa\"};","import React from \"react\";\r\n\r\nimport styles from \"./FormControl.module.css\"\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : '') }>\r\n      <props.type {...input} {...props} />\r\n    {meta.touched && meta.error && <span>{meta.error}</span>}\r\n  </div>\r\n\r\n)}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendItem_avatar__136-0\",\"name\":\"FriendItem_name__14zBv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Tjb_\",\"login_block\":\"Header_login_block__299k9\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst SET_USER_PROFILE =\"SET_USER_PROFILE\";\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst SET_NEW_STATUS = 'SET_NEW_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n\r\n  postsData: [\r\n    {id:1, text: \"Hello\", value: 23},\r\n    {id:2, text: \"Ooweee\", value: 43},\r\n    {id:3, text: \"Pickle rick\", value: 13},\r\n    {id:4, text: \"Peace among the worlds\", value: 42},\r\n    {id:5, text: \"Show me what you got\", value: 666},\r\n    {id:6, text: \"Bye\", value: 1984},\r\n    {id:6, text: \"Bye\", value: 1984},\r\n    {id:6, text: \"Bye\", value: 1984}\r\n  ],\r\n  newPostText: \"\",\r\n  profile: null,\r\n  status: \"\",\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n\r\n      let newPost = {\r\n        id: 5,\r\n        text: action.newPostText,\r\n        value: 2\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n      }\r\n\r\n    }\r\n   /*\r\n    case UPDATE_NEW_POST_TEXT: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      }\r\n\r\n    }*/\r\n    case SET_USER_PROFILE: {\r\n      return  {...state, profile: action.profile}\r\n    }\r\n    case SET_USER_STATUS: {\r\n      return {...state, status: action.userId}\r\n    }\r\n    case SET_NEW_STATUS: {\r\n      return {...state, status: action.status}\r\n    }\r\n    case DELETE_POST: {\r\n      return {...state, postsData: state.postsData.map(p => p.id !== action.postId)}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (text) => ( {type: ADD_POST, newPostText: text} )\r\n\r\nexport const updateNewAreaTextActionCreator = (text) => ( {type: UPDATE_NEW_POST_TEXT, newText: text} )\r\nexport const setUserProfile = (profile) => (  {type: SET_USER_PROFILE, profile } )\r\nexport const setUserStatus = (userId) => ( {type: SET_USER_STATUS, userId} )\r\nexport const setNewUserStatus = (status) => ( {type: SET_NEW_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n//thunks\r\nexport const setUserProfileThunk = (profile) => async (dispatch) => {\r\n   const response = await profileAPI.setUser(profile)\r\n      dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getUserStatusThunk = (userId) => async (dispatch) => {\r\n  const response = await profileAPI.getStatus(userId)\r\n      dispatch(setUserStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatusThunk = (status) => async (dispatch) => {\r\n   const response = await profileAPI.updateStatus(status)\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(setNewUserStatus(status))\r\n        return\r\n      } alert(\"Update Status Error\")\r\n}\r\n\r\nexport default profileReducer"],"sourceRoot":""}